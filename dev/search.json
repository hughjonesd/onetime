[{"path":"https://hughjonesd.github.io/onetime/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 David Hugh-Jones Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to onetime","text":"Sometimes package authors want run code given user given computer. just “per session”, “ever” “per month” . use cases: Tell users new features package, without annoying every time load . Show message, option hide future. Perform cleanup actions upgrade. onetime package lets . Onetime lightweight package, just two package dependencies, rappdirs filelock. total size including dependencies less 50 Kb. cheap include dependency package.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to onetime","text":"can install onetime CRAN like : Next, R command line, run haven’t used onetime , asked OK store files onetime’s configuration directory. Answer Y. Now can try onetime’s functions.","code":"install.packages(\"onetime\") library(onetime) check_ok_to_store(ask = TRUE)"},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to onetime","text":"Let’s use onetime_message() show message just . command line, enter: see message, displayed using base R message() function. Now enter code : … won’t see anything! Even restart R run onetime_message() id, nothing shown. Onetime stored file computer record message already shown, doesn’t show . still won’t see message, even change message : ’s onetime identifies actions id. change id, can send new message: aren’t limited sending messages. can also give warnings: can print package startup messages using onetime_startup_message(). rlang package installed, can also use onetime_rlang_inform() onetime_rlang_warn() print messages warnings using rlang format: Underlying functions onetime_do(), allows run arbitrary code just :","code":"id <- \"vignette-1\" onetime_message(\"I shall say this only once!\", id = id) #> I shall say this only once! onetime_message(\"I shall say this only once!\", id = id) onetime_message(\"I repeat... I shall say this only once!\", id = id) id <- \"vignette-2\" onetime_message(\"Does nobody hear the cries of an poor old woman?\", id = id) #> Does nobody hear the cries of an poor old woman? id <- \"vignette-3\" onetime_warning(\"What are you doing with that woman?\", id = id) #> Warning: What are you doing with that woman? id <- \"vignette-4\" onetime_rlang_inform(c(                        \"Let that be a lesson to you.\",                         i = \"Never again will you burn my toast.\"                        ),                       id = id) #> Let that be a lesson to you. #> ℹ Never again will you burn my toast. id <- \"vignette-5\" onetime_do(print(getRversion()), id = id) #> [1] '4.2.2'"},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"allowing-the-user-to-hide-a-message","dir":"Articles","previous_headings":"","what":"Allowing the user to hide a message","title":"Introduction to onetime","text":"Sometimes may wish show message user give option hide future. can onetime_message_confirm(). interactive sessions, ask user want show message : non-interactive sessions, tell user can hide message future:","code":"id <- \"vignette-6\" onetime_message_confirm(   \"What are you doing with that serving girl in your arms?\",   id = id) #> What are you doing with that serving girl in your arms? #> Show this message again? [yN] id <- \"vignette-7\" onetime_message_confirm(\"Hans, have you got the weedkiller?\", id = id) #> Hans, have you got the weedkiller? #> To hide this message in future, run: #>   onetime_mark_as_done(id = \"vignette-7\")"},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"setting-an-expiry-time","dir":"Articles","previous_headings":"","what":"Setting an expiry time","title":"Introduction to onetime","text":"can set expiry time passing difftime() object expiry argument functions. example, print message, printed past week:","code":"id <- \"vignette-8\" onetime_message(\"Good moaning!\",                  id = id,                  expiry = as.difftime(1, \"weeks\")                 ) #> Good moaning!"},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"using-onetime-in-your-package","dir":"Articles","previous_headings":"","what":"Using onetime in your package","title":"Introduction to onetime","text":"Onetime works writing file, typically folder user’s configuration directory. package author, responsibility check permission store lockfiles. CRAN policy demands . Onetime functions check permission, default won’t store file granted. package author, several options. package used directly command line, simplest option call functions using without_permission = \"ask\". ask user permission store files granted. , action won’t run. want control ask users, can call check_ok_to_store(ask = TRUE) manually using onetime functions. code might run non-interactively, part long-running command, can manually call set_ok_to_store(TRUE) use onetime functions. grant permission store files, print warning user explaining can change : default, configuration files stored beneath rappdirs::user_config_dir(). want store configuration files non-standard directory, set options(onetime.dir = <path directory>). option set, onetime assumes permission granted. , can also use approach avoid raising issue permissions user - long don’t plan submit package CRAN. onetime already installed different package, likely user already granted file permissions, onetime functions just work.","code":"id <- \"vignette-9\" onetime_message(\"Thank you for your kind applause.\",                  id = id,                 without_permission = \"ask\") #> The onetime package requests to store files in '~/Library/Application Support/onetime'. #> Is this OK? [Yn] #> Thank you for your kind applause. check_ok_to_store(   ask = TRUE,    message = \"Please let this package store files in your config directory '%s'.\",   confirm_prompt = \"OK? (Y/N)\"   ) #> Please let this package store files in your config directory'~/Library/Application Support/onetime' #> OK? (Y/N) set_ok_to_store(TRUE) #> Granting the onetime package permission to store lockfiles on this computer. #> Lockfiles are stored beneath '/tmp/Rtmpg2OWho'. #> You can revoke permission by calling: #>   onetime::set_ok_to_store(FALSE)"},{"path":"https://hughjonesd.github.io/onetime/dev/articles/onetime.html","id":"utility-functions","dir":"Articles","previous_headings":"","what":"Utility functions","title":"Introduction to onetime","text":"onetime_been_done() checks whether action performed: reset particular id, functions run , use onetime_reset(): version 0.2.0 package, can use onetime_mark_as_done() manually mark particular action done.","code":"onetime_been_done(\"vignette-1\") #> [1] TRUE onetime_been_done(\"vignette-unused\") #> [1] FALSE onetime_reset(id = \"vignette-1\") onetime_message(\"I shall say this only once!\", id = \"vignette-1\") #> I shall say this only once!"},{"path":"https://hughjonesd.github.io/onetime/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Hugh-Jones. Author, maintainer.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hugh-Jones D (2022). onetime: Run Code . https://github.com/hughjonesd/onetime, https://hughjonesd.github.io/onetime/.","code":"@Manual{,   title = {onetime: Run Code Only Once},   author = {David Hugh-Jones},   year = {2022},   note = {https://github.com/hughjonesd/onetime, https://hughjonesd.github.io/onetime/}, }"},{"path":[]},{"path":"https://hughjonesd.github.io/onetime/dev/example.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Documentation","text":"","code":"library(onetime) ids  <- paste0(\"onetime-readme-\", sample(1e9, 5L))   for (i in 1:5) {   cat(\"Loop \", i, \" of 5\\n\")   onetime_do(cat(\"This command will only be run once.\\n\"), id = ids[1])   onetime_warning(\"This warning will only be shown once.\", id = ids[2])   onetime_message(\"This message will only be shown once.\", id = ids[3]) } ## Loop  1  of 5 ## This command will only be run once.  ## Warning: This warning will only be shown once.  ## This message will only be shown once.  ## Loop  2  of 5 ## Loop  3  of 5 ## Loop  4  of 5 ## Loop  5  of 5 # Meanwhile, in a separate process: library(callr) result <- callr::r(function (ids) {   onetime::onetime_message(\"This message with an existing ID will not be shown.\", id = ids[1])   onetime::onetime_message(\"This message with a new ID will be shown.\", id = ids[4]) }, show = TRUE, args = list(ids = ids)) ## This message with an existing ID will not be shown. ## This message with a new ID will be shown. # Letting the user hide a message: onetime_message_confirm(\"A message that the user might want to hide.                         In non-interactive sessions, instructions will                         be shown for hiding it manually.\", id = ids[5]) ## A message that the user might want to hide. ##                         In non-interactive sessions, instructions will ##                         be shown for hiding it manually. ## To hide this message in future, run: ##   onetime_mark_as_done(id = \"onetime-readme-483999030\")  ## [1] FALSE"},{"path":"https://hughjonesd.github.io/onetime/dev/index.html","id":"onetime","dir":"","previous_headings":"","what":"Run Code Only Once","title":"Run Code Only Once","text":"Listen carefully. shall say . Michelle Dubois, ’Allo ’Allo onetime package provides convenience functions run R code per user. example, can show startup message first time (ever) package loaded. Onetime lightweight package. requires just two package dependencies, rappdirs filelock, indirect dependencies. total size including dependencies less 50 Kb. information, see vignette. Development documentation https://hughjonesd.github.io/onetime/dev.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Run Code Only Once","text":"","code":"library(onetime)  # Setup otd <- tempdir(check = TRUE) oo <- options(onetime.dir = otd) ids  <- paste0(\"onetime-readme-\", sample(1e9, 5L))   for (i in 1:5) {   cat(\"Loop \", i, \" of 5\\n\")   onetime_do(cat(\"This command will only be run once.\\n\"), id = ids[1])   onetime_warning(\"This warning will only be shown once.\", id = ids[2])   onetime_message(\"This message will only be shown once.\", id = ids[3]) } #> Loop  1  of 5 #> This command will only be run once. #> Warning: This warning will only be shown once. #> This message will only be shown once. #> Loop  2  of 5 #> Loop  3  of 5 #> Loop  4  of 5 #> Loop  5  of 5  # Meanwhile, in a separate process: library(callr) result <- callr::r(function (ids, otd) {   options(onetime.dir = otd)   onetime::onetime_message(\"This message with an existing ID will not be shown.\", id = ids[1])   onetime::onetime_message(\"This message with a new ID will be shown.\", id = ids[4]) }, show = TRUE, args = list(ids = ids, otd = otd)) #> This message with a new ID will be shown.   # Letting the user hide a message: onetime_message_confirm(\"A message that the user might want to hide.\\n\",                         \"In non-interactive sessions, instructions will \",                         \"be shown for hiding it manually.\", id = ids[5]) #> A message that the user might want to hide. #> In non-interactive sessions, instructions will be shown for hiding it manually. #> To hide this message in future, run: #>   onetime_mark_as_done(id = \"onetime-readme-652373289\")"},{"path":"https://hughjonesd.github.io/onetime/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Run Code Only Once","text":"Onetime now CRAN. can install : can install development version GitHub :","code":"install.packages(\"onetime\") # install.packages(\"devtools\") devtools::install_github(\"hughjonesd/onetime\")"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/check_ok_to_store.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the package has permission to store files on the user's computer — check_ok_to_store","title":"Check if the package has permission to store files on the user's computer — check_ok_to_store","text":"onetime package works storing lockfiles rappdirs::user_config_dir(). unless permission granted. using onetime functions, package authors call check_ok_to_store(ask = TRUE) interactive session, functions called directly command line.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/check_ok_to_store.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the package has permission to store files on the user's computer — check_ok_to_store","text":"","code":"check_ok_to_store(   ask = FALSE,   message = \"The onetime package requests to store files in '%s'.\",   confirm_prompt = \"Is this OK? [Yn] \",   confirm_answers = c(\"Y\", \"y\", \"Yes\", \"yes\", \"YES\"),   default_answer = \"Y\" )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/check_ok_to_store.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the package has permission to store files on the user's computer — check_ok_to_store","text":"ask TRUE ask user permission. message Message display user. confirm_prompt Character string. Question prompt user hide message future. confirm_answers Character vector. Answers cause message hidden future. default_answer Character string. Default answer user simply presses return.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/check_ok_to_store.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the package has permission to store files on the user's computer — check_ok_to_store","text":"TRUE : already permission; ask TRUE, interactive session user gives us permission; options(\"onetime.dir\") set non-NULL value. Otherwise FALSE.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/check_ok_to_store.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if the package has permission to store files on the user's computer — check_ok_to_store","text":"package used interactively, workaround call set_ok_to_store(). grants permission prints informative message. Package owners call ask explicitly. onetime_message_confirm() exception: default require global permission store files, since user accepting \"show \" considered sufficient. ask = TRUE asks user, already given permission, session interactive(). Remaining parameters passed onetime_message_confirm() case, ignored otherwise. \"%s\" message replaced onetime storage directory.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/check_ok_to_store.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the package has permission to store files on the user's computer — check_ok_to_store","text":"","code":"check_ok_to_store() #> [1] FALSE"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime-rlang.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a warning or message only once using rlang functions — onetime-rlang","title":"Print a warning or message only once using rlang functions — onetime-rlang","text":"use need add \"rlang\" package dependencies.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime-rlang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a warning or message only once using rlang functions — onetime-rlang","text":"","code":"onetime_rlang_warn(   ...,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   without_permission = \"warn\" )  onetime_rlang_inform(   ...,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   without_permission = \"warn\" )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime-rlang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a warning or message only once using rlang functions — onetime-rlang","text":"... Passed rlang::warn() rlang::inform(). id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default. expiry difftime() e.g. lubridate::duration() object. length time, code run . without_permission Character string. user given permission store files? \"warn\" runs action extra warning; \"run\" runs action warning; \"pass\" nothing returns default; \"stop\" throws error; \"ask\" asks permission using check_ok_to_store(), returns default granted.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime-rlang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a warning or message only once using rlang functions — onetime-rlang","text":"Invisibly: TRUE message/warning shown, FALSE otherwise.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime-rlang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a warning or message only once using rlang functions — onetime-rlang","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1)  for (n in 1:3) {   onetime_rlang_warn(c(\"rlang-style warning\", i = \"Extra info\"), id = id) } #> Warning: rlang-style warning #> ℹ Extra info  onetime_reset(id = id) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Run code only once — onetime","title":"Run code only once — onetime","text":"Onetime allows package authors run code (ever) given user. writing file, typically folder user's configuration directory given rappdirs::user_config_dir(). user can set alternative filepath using options(\"onetime.dir\").","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run code only once — onetime","text":"Core functions include: onetime_do() runs arbitrary code . onetime_warning() friends print warning message . onetime_message_confirm() prints message asks \"Show message ?\" onetime_rlang_warn() onetime_rlang_inform() print messages using functions rlang package. onetime_only() returns function runs . check_ok_to_store() set_ok_to_store() check grant permission store lockfiles user's computer. package authors' responsibility check permission store lockfiles. may done already another package onetime already installed. can ask permission interactively command line calling check_ok_to_store() ask = TRUE. information, see vignette(\"onetime\").","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime.html","id":"example","dir":"Reference","previous_headings":"","what":"Example","title":"Run code only once — onetime","text":"","code":"library(onetime)  # Setup otd <- tempdir(check = TRUE) oo <- options(onetime.dir = otd) ids  <- paste0(\"onetime-readme-\", sample(1e9, 5L))   for (i in 1:5) {   cat(\"Loop \", i, \" of 5\\n\")   onetime_do(cat(\"This command will only be run once.\\n\"), id = ids[1])   onetime_warning(\"This warning will only be shown once.\", id = ids[2])   onetime_message(\"This message will only be shown once.\", id = ids[3]) } ## Loop  1  of 5 ## This command will only be run once.  ## Warning: This warning will only be shown once.  ## This message will only be shown once.  ## Loop  2  of 5 ## Loop  3  of 5 ## Loop  4  of 5 ## Loop  5  of 5 # Meanwhile, in a separate process: library(callr) result <- callr::r(function (ids, otd) {   options(onetime.dir = otd)   onetime::onetime_message(\"This message with an existing ID will not be shown.\", id = ids[1])   onetime::onetime_message(\"This message with a new ID will be shown.\", id = ids[4]) }, show = TRUE, args = list(ids = ids, otd = otd)) ## This message with a new ID will be shown. # Letting the user hide a message: onetime_message_confirm(\"A message that the user might want to hide.\\n\",                         \"In non-interactive sessions, instructions will \",                         \"be shown for hiding it manually.\", id = ids[5]) ## A message that the user might want to hide. ## In non-interactive sessions, instructions will be shown for hiding it manually. ## To hide this message in future, run: ##   onetime_mark_as_done(id = \"onetime-readme-892631245\")"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_been_done.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a onetime call has already been made — onetime_been_done","title":"Check if a onetime call has already been made — onetime_been_done","text":"Check onetime call already made","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_been_done.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a onetime call has already been made — onetime_been_done","text":"","code":"onetime_been_done(   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_been_done.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a onetime call has already been made — onetime_been_done","text":"id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default. expiry difftime() e.g. lubridate::duration() object. length time, code run .","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_been_done.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a onetime call has already been made — onetime_been_done","text":"TRUE call recorded (within expiry time, given).","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_been_done.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a onetime call has already been made — onetime_been_done","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1)  onetime_been_done(id = id) #> [1] FALSE onetime_message(\"Creating an ID\",  id = id) #> Creating an ID onetime_been_done(id = id) #> [1] TRUE  onetime_reset(id = id) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_do.html","id":null,"dir":"Reference","previous_headings":"","what":"Run code only once — onetime_do","title":"Run code only once — onetime_do","text":"function runs expression just . creates lockfile recording unique ID prevent expression run .","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_do.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run code only once — onetime_do","text":"","code":"onetime_do(   expr,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   default = NULL,   without_permission = c(\"warn\", \"run\", \"stop\", \"pass\", \"ask\") )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_do.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run code only once — onetime_do","text":"expr code evaluate. R statement expression() object. id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default. expiry difftime() e.g. lubridate::duration() object. length time, code run . default Value return expr executed. without_permission Character string. user given permission store files? \"warn\" runs action extra warning; \"run\" runs action warning; \"pass\" nothing returns default; \"stop\" throws error; \"ask\" asks permission using check_ok_to_store(), returns default granted.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_do.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run code only once — onetime_do","text":"onetime_do() invisibly returns value expr, default expr run run already.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_do.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run code only once — onetime_do","text":"Calls identified id. use value id across different calls onetime functions, first call get made. default path, lockfiles stored, within rappdirs::user_config_dir() unless overridden options(\"onetime.dir\"). call gives error, lockfile still written. expiry backward-looking. , expiry used check time see lockfile written Sys.time() - expiry. used lockfile created. , set expiry value whenever call onetime_do(). See example.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_do.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run code only once — onetime_do","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1L)  for (n in 1:3) {   onetime_do(print(\"printed once\"), id = id) } #> [1] \"printed once\"  # expiry is \"backward-looking\": id2 <- sample(10000L, 1L) expiry <- as.difftime(1, units = \"secs\") onetime_do(print(\"Expires quickly, right?\"), id = id2, expiry = expiry) #> [1] \"Expires quickly, right?\" Sys.sleep(2) onetime_do(print(\"This won't be shown...\"), id = id2) onetime_do(print(\"... but this will\"), id = id2, expiry = expiry) #> [1] \"... but this will\"   onetime_reset(id = id) onetime_reset(id = id2) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_mark_as_done.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark an action as done — onetime_mark_as_done","title":"Mark an action as done — onetime_mark_as_done","text":"manually marks action done.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_mark_as_done.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark an action as done — onetime_mark_as_done","text":"","code":"onetime_mark_as_done(   id = deprecate_calling_package(),   path = default_lockfile_dir() )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_mark_as_done.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark an action as done — onetime_mark_as_done","text":"id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_mark_as_done.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark an action as done — onetime_mark_as_done","text":"Invisible TRUE action represented id done , now explicitly marked done. Invisible FALSE already marked done (still ).","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_mark_as_done.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark an action as done — onetime_mark_as_done","text":"Note expiry parameter available, expiry backward-looking. See onetime_do() information. Marking action done requires permission store files user's computer, just like onetime actions.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_mark_as_done.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark an action as done — onetime_mark_as_done","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1)  onetime_mark_as_done(id = id) onetime_message(\"Won't be shown\", id = id)  onetime_reset(id = id) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_message_confirm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","title":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","text":"uses readline() ask user message shown future.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_message_confirm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","text":"","code":"onetime_message_confirm(   ...,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   confirm_prompt = \"Show this message again? [yN] \",   confirm_answers = c(\"N\", \"n\", \"No\", \"no\"),   default_answer = \"N\",   require_permission = FALSE,   without_permission = \"warn\",   noninteractive = paste0(\"To hide this message in future, run:\\n\",     \"  onetime_mark_as_done(id = \\\"\", id, \"\\\")\"),   message = deprecated() )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_message_confirm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","text":"... Passed message(). id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default. expiry difftime() e.g. lubridate::duration() object. length time, code run . confirm_prompt Character string. Question prompt user hide message future. confirm_answers Character vector. Answers cause message hidden future. default_answer Character string. Default answer user simply presses return. require_permission Logical. Ask permission store files user's computer, granted? Setting FALSE overrides without_permission. without_permission Character string. user given permission store files? \"warn\" runs action extra warning; \"run\" runs action warning; \"pass\" nothing returns default; \"stop\" throws error; \"ask\" asks permission using check_ok_to_store(), returns default granted. noninteractive String. Additional message send non-interactive sessions. Set NULL nothing non-interactive sessions. default tells user manually mark message done. message","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_message_confirm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","text":"NULL message shown (shown already non-interactive session noninteractive NULL). TRUE user confirmed, .e. chose hide message. FALSE message shown user confirm (choose hide message, non-interactive session noninteractive NULL). Results returned invisibly. Note default, TRUE returned user answers \"\" \"Show message ?\" FALSE returned user answers \"yes\".","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_message_confirm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","text":"default, message hidden user answers \"n\", \"\", \"N\", just presses return prompt question. Unlike onetime functions, onetime_message_confirm() default require permission store files user's computer. assumption saying \"show message \" counts granting permission (just one message). can ask broader permission setting require_permission = TRUE without_permission = \"ask\".","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_message_confirm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a message, and ask for confirmation to hide it in future — onetime_message_confirm","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1L)  onetime_message_confirm(\"A message to show one or more times\", id = id) #> A message to show one or more times #> To hide this message in future, run: #>   onetime_mark_as_done(id = \"5087\")  onetime_reset(id = id) #> Warning: cannot remove file '/tmp/Rtmp7JIDKW/NO-PACKAGE/5087', reason 'No such file or directory' options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a function to be called only once — onetime_only","title":"Wrap a function to be called only once — onetime_only","text":"takes function returns function wrapped onetime_do(). Use code run , may called multiple locations. frees use id multiple times.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a function to be called only once — onetime_only","text":"","code":"onetime_only(   .f,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   default = NULL,   without_permission = \"warn\" )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a function to be called only once — onetime_only","text":".f function id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default. default Value return .f function executed. without_permission Character string. user given permission store files? \"warn\" runs action extra warning; \"run\" runs action warning; \"pass\" nothing returns default; \"stop\" throws error; \"ask\" asks permission using check_ok_to_store(), returns default granted.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a function to be called only once — onetime_only","text":"wrapped function. function returns result .f,  default inner function called.","code":""},{"path":[]},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a function to be called only once — onetime_only","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1)  sample_once <- onetime_only(sample, id = id) sample_once(1:10) #>  [1]  6  8  7  1  3  9 10  2  4  5 sample_once(1:10) #> NULL  onetime_reset(id) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a onetime call by ID — onetime_reset","title":"Reset a onetime call by ID — onetime_reset","text":"Reset onetime call ID","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a onetime call by ID — onetime_reset","text":"","code":"onetime_reset(id = deprecate_calling_package(), path = default_lockfile_dir())"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a onetime call by ID — onetime_reset","text":"id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a onetime call by ID — onetime_reset","text":"result file.remove(), invisibly.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_reset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a onetime call by ID — onetime_reset","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1)  onetime_message(\"will be shown\",  id = id) #> will be shown onetime_message(\"won't be shown\", id = id) onetime_reset(id = id) onetime_message(\"will be shown\",  id = id) #> will be shown  onetime_reset(id = id) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_warning.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a warning or message only once — onetime_warning","title":"Print a warning or message only once — onetime_warning","text":"functions use onetime_do() print warning message just .","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_warning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a warning or message only once — onetime_warning","text":"","code":"onetime_warning(   ...,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   without_permission = \"warn\" )  onetime_message(   ...,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   without_permission = \"warn\" )  onetime_startup_message(   ...,   id = deprecate_calling_package(),   path = default_lockfile_dir(),   expiry = NULL,   without_permission = \"warn\" )"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_warning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a warning or message only once — onetime_warning","text":"... Passed warning(), message() packageStartupMessage(). id Unique ID string. unset, name calling package used. Since onetime 0.2.0, setting id  warning. path Directory store lockfiles. Normally leave default. expiry difftime() e.g. lubridate::duration() object. length time, code run . without_permission Character string. user given permission store files? \"warn\" runs action extra warning; \"run\" runs action warning; \"pass\" nothing returns default; \"stop\" throws error; \"ask\" asks permission using check_ok_to_store(), returns default granted.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_warning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a warning or message only once — onetime_warning","text":"Invisible TRUE message/warning shown, invisible FALSE otherwise.","code":""},{"path":[]},{"path":"https://hughjonesd.github.io/onetime/dev/reference/onetime_warning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a warning or message only once — onetime_warning","text":"","code":"oo <- options(onetime.dir = tempdir(check = TRUE)) id <- sample(10000L, 1)  for (n in 1:3) {   onetime_warning(\"will be shown once\", id = id) } #> Warning: will be shown once  onetime_reset(id = id) options(oo)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/set_ok_to_store.html","id":null,"dir":"Reference","previous_headings":"","what":"Grant or revoke permission to store lockfiles on the user's computer — set_ok_to_store","title":"Grant or revoke permission to store lockfiles on the user's computer — set_ok_to_store","text":"End users may use command line. Package authors call ask permission interactively using check_ok_to_store(ask = TRUE).","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/set_ok_to_store.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grant or revoke permission to store lockfiles on the user's computer — set_ok_to_store","text":"","code":"set_ok_to_store(ok = TRUE)"},{"path":"https://hughjonesd.github.io/onetime/dev/reference/set_ok_to_store.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grant or revoke permission to store lockfiles on the user's computer — set_ok_to_store","text":"ok TRUE grant permission store lockfiles, FALSE revoke unset options(\"onetime.dir\").","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/set_ok_to_store.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grant or revoke permission to store lockfiles on the user's computer — set_ok_to_store","text":"TRUE operation succeeded.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/reference/set_ok_to_store.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grant or revoke permission to store lockfiles on the user's computer — set_ok_to_store","text":"","code":"if (FALSE) { set_ok_to_store() }"},{"path":"https://hughjonesd.github.io/onetime/dev/news/index.html","id":"onetime-development-version","dir":"Changelog","previous_headings":"","what":"onetime (development version)","title":"onetime (development version)","text":"setting id explicitly now deprecated warning. brittle: can lead silent errors use onetime functions one place. New function onetime_mark_as_done() manually mark action done. onetime_message_confirm() now prints message default non-interactive sessions, along instructions hide message using onetime_mark_as_done(). onetime_message_confirm() now passes multiple arguments message() using .... makes easier pass long messages. Using named message argument soft-deprecated. onetime_only() gains default argument returned wrapper function inner function called. default default NULL. onetime_message() friends now return results invisibly. nicer use rmarkdown documents. onetime_do() now always returns invisibly, even default returned. onetime_only() now respects visibility wrapped function.","code":""},{"path":"https://hughjonesd.github.io/onetime/dev/news/index.html","id":"onetime-010","dir":"Changelog","previous_headings":"","what":"onetime 0.1.0","title":"onetime 0.1.0","text":"CRAN release: 2022-11-22 Initial release.","code":""}]
