% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/onetime.R
\docType{package}
\name{onetime}
\alias{onetime}
\title{Run code only once}
\description{
Onetime allows package authors to run code only once (ever) for a given
user. It does so by writing a file, typically to a folder in the user's
configuration directory as given by \code{\link[rappdirs:user_data_dir]{rappdirs::user_config_dir()}}. The
user can set an alternative filepath using \code{options("onetime.dir")}.
}
\details{
If loaded in an interactive session, the onetime package confirms
(once only) whether it has permission to write files to the
configuration directory. In a non-interactive session, it warns
the user that files will be written using \code{\link[=packageStartupMessage]{packageStartupMessage()}}.
This warning can be turned off by confirming permission interactively,
setting \code{options("onetime.dir")}, or setting
\code{options("onetime.ok_to_store" = TRUE)}. As a package author, you should
\emph{only} set these options if you are sure you have the user's permission.
\itemize{
\item \code{\link[=onetime_do]{onetime_do()}} runs arbitrary code only once.
\item \code{\link[=onetime_warning]{onetime_warning()}} and friends print a warning or message only once.
\item \code{\link[=onetime_message_confirm]{onetime_message_confirm()}} prints a message and asks
"Show this message again?"
\code{\link[=onetime_rlang_warn]{onetime_rlang_warn()}} and \code{\link[=onetime_rlang_inform]{onetime_rlang_inform()}} call \code{\link[rlang:abort]{rlang::warn()}}
and \code{\link[rlang:abort]{rlang::inform()}} respectively.
\item \code{\link[=onetime_only]{onetime_only()}} returns a function that runs only once.
\item \code{\link[=onetime_reset]{onetime_reset()}} resets a onetime call using a string ID.
}

\code{onetime} provides convenience functions to run R code only once per
user. For example, you can show a startup message only the first time
(ever) that a package is loaded.
\subsection{Example}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(onetime)
ids  <- paste0("onetime-readme-", sample(1e9, 4))


for (i in 1:5) \{
  cat("Loop ", i, " of 5\n")
  onetime_do(cat("You will only see this once.\n"), id = ids[1])
  onetime_warning("This warning will only be shown once.", id = ids[2])
  onetime_message("This message will only be shown once.", id = ids[3])
\}
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## Loop  1  of 5

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## You will only see this once.

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## Warning: This warning will only be shown once.

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## This message will only be shown once.

## Loop  2  of 5

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## Loop  3  of 5

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## Loop  4  of 5

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.

## Loop  5  of 5

## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
## 'onetime' package saving configuration files in '~/Library/Application Support/onetime-lockfiles'.
## To avoid warning messages, either call options("onetime.ok_to_store" = TRUE),
## or set options("onetime.dir") to store files in a non-standard directory where you have write access.
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# Meanwhile, in a separate process:
library(callr)
callr::r(function (ids) \{
  onetime::onetime_do(cat("This message will not be shown."), id = ids[1])
  onetime::onetime_do(cat("This message with a new id will be shown."), id = ids[4])
\}, show = TRUE, args = list(ids = ids))
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## This message with a new id will be shown.

## NULL
}\if{html}{\out{</div>}}
}
}
